{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar numGraphemeClusters = require( '@stdlib/string-num-grapheme-clusters' );\nvar nextGraphemeClusterBreak = require( '@stdlib/string-next-grapheme-cluster-break' );\nvar format = require( '@stdlib/string-format' );\nvar round = require( '@stdlib/math-base-special-round' );\nvar floor = require( '@stdlib/math-base-special-floor' );\n\n\n// MAIN //\n\n/**\n* Truncates a string in the middle to a specified length.\n*\n* @param {string} str - input string\n* @param {integer} len - output string length (including sequence)\n* @param {string} [seq='...'] - custom replacement sequence\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a string\n* @returns {string} truncated string\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 5 );\n* // returns 'b...p'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 5, '>>>' );\n* // returns 'b>>>p'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 10 );\n* // returns 'beep boop'\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 0 );\n* // returns ''\n*\n* @example\n* var str = 'beep boop';\n* var out = truncateMiddle( str, 2 );\n* // returns '..'\n*\n* @example\n* var str = '🐺 Wolf Brothers 🐺';\n* var out = truncateMiddle( str, 7 );\n* // returns '🐺 ... 🐺'\n*/\nfunction truncateMiddle( str, len, seq ) {\n\tvar seqLength;\n\tvar fromIndex;\n\tvar strLength;\n\tvar seqStart;\n\tvar nVisual;\n\tvar seqEnd;\n\tvar idx2;\n\tvar idx1;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', len ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isString( seq ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a string. Value: `%s`.', seq ) );\n\t\t}\n\t}\n\tseq = seq || '...';\n\tseqLength = numGraphemeClusters( seq );\n\tstrLength = numGraphemeClusters( str );\n\tfromIndex = 0;\n\tif ( len > strLength ) {\n\t\treturn str;\n\t}\n\tif ( len - seqLength < 0 ) {\n\t\treturn seq.slice( 0, len );\n\t}\n\tseqStart = round( ( len - seqLength ) / 2 );\n\tseqEnd = strLength - floor( ( len - seqLength ) / 2 );\n\tnVisual = 0;\n\twhile ( nVisual < seqStart ) {\n\t\tidx1 = nextGraphemeClusterBreak( str, fromIndex );\n\t\tfromIndex = idx1;\n\t\tnVisual += 1;\n\t}\n\tidx2 = idx1;\n\twhile ( idx2 > 0 ) {\n\t\tidx2 = nextGraphemeClusterBreak( str, fromIndex );\n\t\tif ( idx2 >= seqEnd + fromIndex - nVisual ) {\n\t\t\tbreak;\n\t\t}\n\t\tfromIndex = idx2;\n\t\tnVisual += 1;\n\t}\n\treturn str.substring( 0, idx1 ) + seq + str.substring( idx2 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = truncateMiddle;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Truncate a string in the middle to a specified length.\n*\n* @module @stdlib/string-truncate-middle\n*\n* @example\n* var truncateMiddle = require( '@stdlib/string-truncate-middle' );\n*\n* var out = truncateMiddle( 'beep boop', 7 );\n* // returns 'be...op'\n*\n* out = truncateMiddle( 'beep boop', 7, '|' );\n* // returns 'bee|oop'\n*/\n\n// MODULES //\n\nvar truncateMiddle = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = truncateMiddle;\n"],"names":["isString","require$$0","isPrimitive","isNonNegativeInteger","require$$1","numGraphemeClusters","require$$2","nextGraphemeClusterBreak","require$$3","format","require$$4","round","require$$5","floor","require$$6","lib","str","len","seq","seqLength","fromIndex","strLength","seqStart","nVisual","seqEnd","idx2","idx1","TypeError","arguments","length","slice","substring"],"mappings":";;koBAsBA,IAAIA,EAAWC,EAAsCC,YACjDC,EAAuBC,EAAmDF,YAC1EG,EAAsBC,EACtBC,EAA2BC,EAC3BC,EAASC,EACTC,EAAQC,EACRC,EAAQC,EAmGZ,ICrFAC,EDgCA,SAAyBC,EAAKC,EAAKC,GAClC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAM1B,EAAUgB,GACf,MAAM,IAAIW,UAAWlB,EAAQ,kEAAmEO,IAEjG,IAAMb,EAAsBc,GAC3B,MAAM,IAAIU,UAAWlB,EAAQ,gFAAiFQ,IAE/G,GAAKW,UAAUC,OAAS,IACjB7B,EAAUkB,GACf,MAAM,IAAIS,UAAWlB,EAAQ,kEAAmES,IAOlG,GAHAC,EAAYd,EADZa,EAAMA,GAAO,OAGbE,EAAY,EACPH,GAFLI,EAAYhB,EAAqBW,IAGhC,OAAOA,EAER,GAAKC,EAAME,EAAY,EACtB,OAAOD,EAAIY,MAAO,EAAGb,GAKtB,IAHAK,EAAWX,GAASM,EAAME,GAAc,GACxCK,EAASH,EAAYR,GAASI,EAAME,GAAc,GAClDI,EAAU,EACFA,EAAUD,GAEjBF,EADAM,EAAOnB,EAA0BS,EAAKI,GAEtCG,GAAW,EAGZ,IADAE,EAAOC,EACCD,EAAO,MACdA,EAAOlB,EAA0BS,EAAKI,KACzBI,EAASJ,EAAYG,IAGlCH,EAAYK,EACZF,GAAW,EAEZ,OAAOP,EAAIe,UAAW,EAAGL,GAASR,EAAMF,EAAIe,UAAWN"}